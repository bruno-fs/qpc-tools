---

- name: Rename Quipucords server image to version specific cache name
  command: cp "{{ pkg_install_dir }}{{ github_server_filename }}" "{{ qpc_server_version_filename }}"
  when:
    - not quipucords_image_present

- name: Default that image load was not attempted for Quipucords server
  set_fact:
    load_quipucords_server_attempted: false

- name: "image load was attempted for Quipucords server"
  set_fact:
    load_quipucords_server_attempted: true
  when:
    - not quipucords_image_present

- name: Load Quipucords image into local container registry
  shell: "docker load -i {{ qpc_server_version_filename }}"
  become: true
  when:
    - not quipucords_image_present

- name: Check for Quipucords server image presence
  shell: "docker images | grep {{ server_image_name }} | grep {{ server_image_tag }}"
  become: true
  register: quipucords_image_raw
  ignore_errors: yes
  when:
    load_quipucords_server_attempted|bool

- name: Set Quipucords image presence to false
  set_fact:
    quipucords_image_present: false
  when:
    - load_quipucords_server_attempted|bool
    - quipucords_image_raw.rc != 0

- name: Set Quipucords image presence to true if output is not empty
  set_fact:
    quipucords_image_present: "{{ quipucords_image_raw['stdout_lines']|length > 0 }}"
  when:
    - load_quipucords_server_attempted|bool
    - quipucords_image_raw.rc == 0
    - "'stdout_lines' in quipucords_image_raw"

- name: Make sure Quipucords server image loaded (it successfully loaded if skipped)
  fail:
    msg: "The Quipucord server's image was not found after the load was attempted."
  when:
    - load_quipucords_server_attempted|bool
    - not quipucords_image_present

- name: Check for quipucords server is already running
  shell: "docker ps -a -f name={{ server_name }} | grep {{server_name}}"
  become: true
  register: qpc_ps_raw
  ignore_errors: yes

- name: Remove running quipucords server container
  shell: "docker rm -f {{server_name}}"
  become: true
  ignore_errors: yes
  when:
    - qpc_ps_raw['stdout_lines'] | length > 0

- name: Start Quipucords server linked to Postgres container (Docker)
  shell: "docker run --name {{ server_name }} --link {{ db_name }}:qpc-link -d -e USE_SUPERVISORD={{ use_supervisord }} -e QPC_SERVER_TIMEOUT={{ server_http_timeout }} -e QPC_DBMS_USER={{ dbms_user }} -e QPC_DBMS_PASSWORD={{ dbms_password }} -e QPC_DBMS_HOST='qpc-db' -e ANSIBLE_LOG_LEVEL={{ ansible_log_level }} -e NETWORK_CONNECT_JOB_TIMEOUT={{ connect_job_timeout }} -e NETWORK_INSPECT_JOB_TIMEOUT={{ inspect_job_timeout }} -e QPC_SERVER_USERNAME={{ server_username }} -e QPC_SERVER_USER_EMAIL={{ server_user_email }} -e QPC_SERVER_PASSWORD={{ server_password }} -p {{ server_port }}:443 -v {{ server_install_dir }}/sshkeys:/sshkeys{{ dir_mount_selinux }} -v {{ server_install_dir }}/data:/var/data{{ dir_mount_selinux }} -v {{ server_install_dir }}/log:/var/log{{ dir_mount_selinux }} -i {{ server_image_and_tag }}"
  become: true